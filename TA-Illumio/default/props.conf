[illumio:pce]
REPORT-json = report-system_health_kv,report-json,report-json-kv,report-pce-host,report-pce-workloaduuid,report-pce-createdbyhref,report-pce-agenthref,report-pce-createdbyhostname,report-pce-createdbyuser,report-pce-resourceby-user-event_type,report-pce-resourceby-non-user-event_type,report-pce-account-management-src-user,report-workloads_affected_after,report-changes_labels_deleted,report-sev,report-keyValue,report-datatype,report-src
EVAL-action = case(event_type="user.sign_in", "failure", event_type="user.login", "success", event_type="agent.tampering", "modified", event_type="agent.firewall_config", "modified", like(event_type,"%.create"), "created", like(event_type,"%.update"), "modified", like(event_type,"%.delete"), "deleted")
EVAL-app = "Illumio"
EVAL-combined_key_value = mvzip(KEY, VALUE, ":")
EVAL-vendor_product = "illumio:pce"
EVAL-port_protocol = dst_port + "/" + case(proto=6,"TCP",proto=17,"UDP",proto=1,"ICMP")
EVAL-category = case(mvcount(mvfilter(match(href,".*/events*")))==1 AND version==2, "auditable", mvcount(mvfilter(match(href,".*/system_events*")))==1, "system_events", 1=1, "unknown")
EVAL-pce_hostname = lower(pce_hostname)
EVAL-json_data = if(isnull(json_data),_raw,json_data)
FIELDALIAS-src_ip = src_ip as src
TRANSFORMS-change_sourcetype = collector_sourcetype
SHOULD_LINEMERGE = false
KV_MODE = none
TIME_PREFIX = "timestamp":"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3N%Z

[illumio:pce:metadata]
TRUNCATE = 50000
SHOULD_LINEMERGE = false
KV_MODE = json
DATETIME_CONFIG = CURRENT
FIELDALIAS-pce_fqdn = fqdn as pce_fqdn

[illumio:pce:collector]
SHOULD_LINEMERGE = false
REPORT-json = report-json,report-json-kv,report-pce-host,src_app_label,src_role_label,src_env_label,src_loc_label,dest_app_label,dest_role_label,dest_env_label,dest_loc_label
TRANSFORMS-invaliddata=remove-invalid-data
EVAL-action = case(pd=0 OR pd="0", "allowed", pd=1 OR pd="1", "potentially-blocked", pd=2 OR pd="2", "blocked", pd=3 OR pd="3", "unknown")
EVAL-connection_state = case(state="A", "active", state="C", "closed", state="T", "timed_out", state="S", "static_illumination", 1=1, "unknown")
EVAL-bytes = (bytes_in+bytes_out)
EVAL-protocol = case(proto=6,"TCP",proto=17,"UDP",proto=1,"ICMP")
EVAL-src_href = if(isnull(src_href),"-",src_href)
EVAL-vendor_product = "illumio:pce"
EVAL-pce_hostname = lower(pce_hostname)
EVAL-port_protocol = dst_port + "/" + case(proto=6,"TCP",proto=17,"UDP",proto=1,"ICMP")
FIELDALIAS-count = count as connection_count
FIELDALIAS-tbi = tbi as bytes_in
FIELDALIAS-tbo = tbo as bytes_out
FIELDALIAS-src_ip = src_ip as src
FIELDALIAS-dst_ip = dst_ip as dest dst_ip as dest_ip
FIELDALIAS-dst_port = dst_port as dest_port
FIELDALIAS-os_name = un as "os_name"
EVAL-hostname = if(isnull(hostname),if(dir="O",src_hostname,dst_hostname),hostname)
EVAL-workload_uuid = if(isnull(workload_uuid),trim(replace(if(dir="O",src_href,dst_href),"/orgs/\d+/workloads/","")),workload_uuid)
KV_MODE = none
TIME_PREFIX = "timestamp":"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3N%Z


[source::eventgen]
DATETIME_CONFIG = CURRENT
FIELDALIAS-time = time as timestamp

[stash_common_action_model]
TRUNCATE = 9999999
# only look for ***SPLUNK*** on the first line
HEADER_MODE = firstline
# we can summary index past data, but rarely future data
MAX_DAYS_HENCE      = 2
MAX_DAYS_AGO        = 10000
# 5 years difference between two events
MAX_DIFF_SECS_AGO   = 155520000
MAX_DIFF_SECS_HENCE = 155520000
MAX_TIMESTAMP_LOOKAHEAD = 64
LEARN_MODEL = false
# break .stash_new custom format into events
SHOULD_LINEMERGE       = false
BREAK_ONLY_BEFORE_DATE = false
LINE_BREAKER           = (\r?\n==##~~##~~  1E8N3D4E6V5E7N2T9 ~~##~~##==\r?\n)

TRANSFORMS-0parse_cam_header    = orig_action_name_for_stash_cam,orig_sid_for_stash_cam,orig_rid_for_stash_cam,sourcetype_for_stash_cam
TRANSFORMS-1sinkhole_cam_header = sinkhole_cam_header